function [varargout] = initInertialNavigationSystem(func, varargin)
    
    switch func
        
        case 'init'
            model = init(varargin{1});
            varargout{1} = model;
            
        otherwise
            error(['Function ''' func ''' not supported.']);
            
    end
end

function ins = init(initArgs)
    accelerometerParam = AccelerometerParam(initArgs.timeData, ...
        initArgs.levelArm, ...
        initArgs.angularAccelerBodyFrame, ...
        eye(3) + initArgs.accScale, ...
        initArgs.accBiasMu, ...
        initArgs.accBiasSigma, ...
        initArgs.accNoiseVar...
        );
    
    gyroParam = GyroParam(initArgs.timeData, ...
        initArgs.gyroGSensitiveBias , ...
        eye(3) + initArgs.gyroScale, ...
        initArgs.gyroBiasMu, ...
        initArgs.gyroBiasSigma, ...
        initArgs.gyroNoiseVar ...
        );
    
    inertialMeasurementUnit = InertialMeasurementUnit(accelerometerParam, ...
        gyroParam, ...
        initArgs.accelerationInBodyFrame, ...
        initArgs.angularVelocityInBodyFrame, ...
        initArgs.timeData ...
        );
    
    ins = InertialNavigationSystem(inertialMeasurementUnit, initArgs.timeData, initArgs.gravityModel, initArgs.mass);
    
    if (initArgs.visualize)
        figure();
        subplot(3, 1, 1);
        plot2(initArgs.timeData.RelTime, inertialMeasurementUnit.AngularVelocity, 'Angular velocity', {'x axis', 'y axis', 'z axis'}, 'w, rad/sec');
        subplot(3, 1, 2);
        plot2(initArgs.timeData.RelTime, initArgs.angularVelocityInBodyFrame.Velocity, 'True angular velocity', {'x axis', 'y axis', 'z axis'}, 'w, rad/sec');
        subplot(3, 1, 3);
        plot2(initArgs.timeData.RelTime, inertialMeasurementUnit.GyroBias, 'Gyro bias', {'x axis', 'y axis', 'z axis'}, 'b_w, rad/sec');
        
        figure();
        subplot(3, 1, 1);
        plot2(initArgs.timeData.RelTime, 1e3*inertialMeasurementUnit.Acceleration, 'Acceleration', {'x axis', 'y axis', 'z axis'}, 'a, m/sec^2');
        subplot(3, 1, 2);
        plot2(initArgs.timeData.RelTime, 1e3*initArgs.accelerationInBodyFrame.Acceleration, 'True acceleration', {'x axis', 'y axis', 'z axis'}, 'a, m/sec^2');
        subplot(3, 1, 3);
        plot2(initArgs.timeData.RelTime, 1e3*inertialMeasurementUnit.AccelerometerBias, 'Acceleration bias', {'x axis', 'y axis', 'z axis'}, 'b_A, m/sec^2');
    end
end
