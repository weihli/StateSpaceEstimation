function [ dy ] = equation_of_motion_free_fly(t, state, t_epoch, gravity_model, mass)
    % equation_of_motion_free_fly. Solve state dynamic equation for spacecraft.
    %
    %   [ dy ] = equation_of_motion_free_fly(t, state, t_epoch, gravity_model, mass, sample_time, start_time)
    %
    %   INPUT
    %        time (t)        time in [sec];
    %        state           state space vector of spaceship (distance in [km], velocity in [km/sec], quaternion);
    %        t_epoch         time Epoch;
    %        gravity_model   Solar system gravity model (allow to calculate gravity accelaration in solar system;
    %        mass            mass of the spacecraft [kg].
    %
    %   OUTPUT
    %        dy     increment (diff) of state space vector of spaceship (distance in [km], velocity in [km/sec]).
    %
    earth_radius = 6378.136; % [km] - Earth's equatorial radius
    mu_earth = 398600.4418; % [km^3/s^2] - Earth gravity const
    
    J2  = 0.00108262575;
    J3  = -0.000002533;
    J4  = -0.000001616;
    
    r = sqrt(state(1)^2 + state(2)^2 + state(3)^2); % distance from Earth center to spacecraft center mass
    po = earth_radius / r;
    
    dy = zeros(length(state), 1);
    
    sun_infl = sun_influence(t_epoch, state(1:3));
    moon_infl = moon_influence(t_epoch, state(1:3));
    
    gravAcc = gravity_model.eval_gravity_acceleration(t, state(1:3), mass);
    
    dy(1:3) = state(4:6);
    dy(4) = gravAcc(1) - (mu_earth*state(1)/r^3) * (...
        J2*3/2*po^2*(1-5*(state(3)/r)^2) ...
        + J3*po^3*5/2*(3-7*(state(3)/r)^2)*state(3)/r ...
        - J4*po^4*5/8*(3-42*(state(3)/r)^2+63*(state(3)/r)^4) ...
        ) ...
        + sun_infl(1) ...
        + moon_infl(1);
    dy(5) = gravAcc(2) - (mu_earth*state(2)/r^3) * (...
        J2*3/2*po^2*(1-5*(state(3)/r)^2) ...
        + J3*po^3*5/2*(3-7*(state(3)/r)^2)*state(3)/r ...
        - J4*po^4*5/8*(3-42*(state(3)/r)^2+63*(state(3)/r)^4) ...
        ) ...
        + sun_infl(2) ...
        + moon_infl(2);
    dy(6) = gravAcc(3) - (mu_earth*state(3)/r^3) * (...
        J2*3/2*po^2*(3-5*(state(3)/r)^2) ...
        + J3*po^3*5/2*(3-7*po^2)*state(3)/r ...
        - J4*po^4*5/8*(3-42*(state(3)/r)^2+63*(state(3)/r)^4)...
        ) ...
        + sun_infl(3) ...
        + moon_infl(3);
end
